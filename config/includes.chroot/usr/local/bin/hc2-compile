#!/usr/bin/env python

# Compilation script for the Helvetic Coding Contest

import os
import re
import subprocess
import sys

FLAGS = {
    "c":     ['-Wall', '-O2', '-pipe', '-static'],
    "cpp":   ['-Wall', '-O2', '-pipe', '-static', '-std=c++11', '-x', 'c++'],
    "c0x":   ['-Wall', '-O2', '-pipe', '-static', '-x', 'c++'],
    "java":  ['-d', '.'],
    "py":    [],
    "py3":   [],
    "rb":    ['-c'],
    "scala": []
}

LIBS = {
    "c":     ['-lm'],
    "cpp":   [],
    "c0x":   [],
    "java":  [],
    "py":    [],
    "py3":   [],
    "rb":    [],
    "scala": []
}

COMPILER = {
    "c":     ['gcc'],
    "cpp":   ['g++'],
    "c0x":   ['g++'],
    "java":  ['javac'],
    "py":    ['true'],
    "py3":   ['true'],
    "rb":    ['ruby'],
    "scala": ['scalac']
}

# Analyze the file that the user specified
if len(sys.argv) <= 1:
    print >>sys.stderr, "usage: hc2-compile <sourcefile>"
    sys.exit(1)
sourcefile = sys.argv[1]

SOURCEFILE_RE = re.compile(r"""
    ^
    (.*?) /?                             # an optional path
    ([^/]+)                              # the base name of the program
    \. (c|cpp|c0x|py|py3|rb|scala|java)  # the file extension
    $""", re.VERBOSE)
m = SOURCEFILE_RE.match(sourcefile)
if not m:
    print >>sys.stderr, "You provided an illegal source file name: " + sourcefile
    print >>sys.stderr, "I cannot make sense of it unless it is in the following format:"
    print >>sys.stderr, SOURCEFILE_RE.pattern
    sys.exit(1)
sourcedir, sourcebase, sourceext = m.groups()
files = ["%s.%s" % (sourcebase, sourceext)]

# perform the compilation
if sourcedir != "":
    os.chdir(sourcedir)
if sourceext in ['c', 'cpp', 'c0x']:
    command = COMPILER[sourceext] + FLAGS[sourceext] + \
              ['-o', sourcebase] + files + LIBS[sourceext]
elif sourceext in ['java', 'py', 'py3', 'rb', 'scala']:
    command = COMPILER[sourceext] + FLAGS[sourceext] + files + LIBS[sourceext]

for f in files:
    if not os.path.isfile(f):
        print >>sys.stderr, "Could not find file to compile:", f
        sys.exit(1)

try:
    print >>sys.stderr, " ".join(command)
    subprocess.check_call(command)
except subprocess.CalledProcessError as e:
    print >>sys.stderr, "Compilation failed."
    sys.exit(e.returncode)

print >>sys.stderr, "Compilation was successful. Run your program using:"
print >>sys.stderr, "hc2-run " + (sourcedir + "/" if sourcedir != "" else "") + sourcebase + "." + sourceext
