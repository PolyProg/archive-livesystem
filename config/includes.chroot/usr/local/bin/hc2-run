#!/usr/bin/env python

# Compilation script for the Helvetic Coding Contest

import os
import re
import subprocess
import sys

ARGS = {
    "java":  ['-Xrs', '-Xmx393216k'],
    "scala": ['-J-Xrs', '-J-Xmx393216k']
}

INTERPRETER = {
    "py":   ['python'],
    "py3":  ['python3'],
    "rb":   ['ruby']
}

# Analyze the file that the user specified
if len(sys.argv) <= 1:
    print >>sys.stderr, "usage: hc2-run <sourcefile>"
    sys.exit(1)
sourcefile = sys.argv[1]

SOURCEFILE_RE = re.compile(r"""
    ^
    (.*?) /?                             # an optional path
    ([^/]+)                              # the base name of the program
    \. (c|cpp|c98|py|py3|rb|scala|java)  # the file extension
    $""", re.VERBOSE)
m = SOURCEFILE_RE.match(sourcefile)
if not m:
    print >>sys.stderr, "You provided an illegal program name: " + sourcefile
    print >>sys.stderr, "I cannot make sense of it unless it is in the following format:"
    print >>sys.stderr, SOURCEFILE_RE.pattern
    sys.exit(1)
sourcedir, sourcebase, sourceext = m.groups()

if sourcedir != "":
    os.chdir(sourcedir)
if sourceext in ['c', 'cpp', 'c98']:
    command = ["./" + sourcebase] + sys.argv[2:]
elif sourceext in ['java', 'scala']:
    command = [sourceext] + ARGS[sourceext] + [sourcebase]
elif sourceext in ['py', 'py3', 'rb']:
    command = INTERPRETER[sourceext] + [sourcebase + '.' + sourceext]

try:
    print >>sys.stderr, " ".join(command)
    subprocess.check_call(command)
except subprocess.CalledProcessError as e:
    print >>sys.stderr, "Program run failed."
    sys.exit(e.returncode)
except OSError as e:
    print >>sys.stderr, "Program run failed:", e
    sys.exit(e.errno)
